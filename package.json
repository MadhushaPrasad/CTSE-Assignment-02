{
  "name": "ctse-assignment-02",
  "version": "1.0.0",
  "description": "##### Objective: Design and implement a prototype of a secure, microservice-based application component using fundamental DevOps practices and cloud capabilities. ##### Assignment Overview: Your group is tasked with creating a prototype for a single, key component of a larger microservice-based application. This should be deployed on a public cloud service provider. You have the option to choose from any cloud service provider of your choice. The final deliverable should demonstrate basic DevOps practices, security considerations including DevSecOps practices, and cloud capabilities. ##### Specific Tasks: - Design a Simple Microservice (LO1, LO3) - Choose a core component of a larger application idea (e.g., product catalog for ecommerce,     etc.). - Outline the functionality and endpoints of this microservice. - You can choose any programming language/ framework of your choice. - Implement Basic DevOps Practices (LO1, LO2) - The code should be hosted in version controlling system. Make sure itâ€™s a public   repository. - Use CI/CD pipelines to automate the build and deployment process for the   microservice. - Containerize the Microservice using Docker (LO3, LO4) - Your microservice should be containerized. - Use any existing container registry service to host your container image. The   application deployment should consume the container image from the container   registry. - Deploy the Microservice (LO2, LO4) - Use managed container orchestration services provided by your cloud service provider   to deploy the containerized microservice. - You can use cloud specific services like ECS (Elastic Container Service)/ Azure   Container Apps etc.. - You have the freedom to even use managed Kubernetes services provided by   your chosen cloud service provider.",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node ./build/src/server.js",
    "build": "npx tsc",
    "dev": "npm run build && nodemon ./build/src/server.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.19.2",
    "mongoose": "^8.2.3"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node": "^20.11.30",
    "gulp-tslint": "^8.1.4",
    "gulp-typescript": "^6.0.0-alpha.1",
    "nodemon": "^3.1.0",
    "typescript": "^5.4.3"
  }
}
